// Code generated by goa v2.0.7, DO NOT EDIT.
//
// calc gRPC client CLI support package
//
// Command:
// $ goa gen goa.design/examples/basic/design

package client

import (
	"encoding/json"
	"fmt"

	calc "goa.design/examples/basic/gen/calc"
	calcpb "goa.design/examples/basic/gen/grpc/calc/pb"
)

// BuildAddPayload builds the payload for the calc add endpoint from CLI flags.
func BuildAddPayload(calcAddMessage string) (*calc.AddPayload, error) {
	var err error
	var message calcpb.AddRequest
	{
		if calcAddMessage != "" {
			err = json.Unmarshal([]byte(calcAddMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, example of valid JSON:\n%s", "'{\n      \"a\": 6322633713974661021,\n      \"b\": 3793862871819669726\n   }'")
			}
		}
	}
	v := &calc.AddPayload{}
	if message.A != 0 {
		aptr := int(message.A)
		v.A = &aptr
	}
	if message.B != 0 {
		bptr := int(message.B)
		v.B = &bptr
	}
	return v, nil
}
