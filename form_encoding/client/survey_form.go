// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "survey": survey_form Resource Client
//
// Command:
// $ goagen
// --design=github.com/goadesign/examples/form_encoding/design
// --out=$(GOPATH)/src/github.com/goadesign/examples/form_encoding
// --version=v1.3.1

package client

import (
	"bytes"
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// SubmitSurveyFormPath computes a request path to the submit action of survey_form.
func SubmitSurveyFormPath() string {

	return fmt.Sprintf("/survey/")
}

// Post accepts a form encoded request and returns a form encoded response
func (c *Client) SubmitSurveyForm(ctx context.Context, path string, payload *YesNoPayload) (*http.Response, error) {
	req, err := c.NewSubmitSurveyFormRequest(ctx, path, payload)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewSubmitSurveyFormRequest create the request corresponding to the submit action endpoint of the survey_form resource.
func (c *Client) NewSubmitSurveyFormRequest(ctx context.Context, path string, payload *YesNoPayload) (*http.Request, error) {
	var body bytes.Buffer
	err := c.Encoder.Encode(payload, &body, "*/*")
	if err != nil {
		return nil, fmt.Errorf("failed to encode body: %s", err)
	}
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("POST", u.String(), &body)
	if err != nil {
		return nil, err
	}
	header := req.Header
	header.Set("Content-Type", "application/x-www-form-urlencoded")
	return req, nil
}
