// Code generated by goa v2.0.5, DO NOT EDIT.
//
// another_secured_service gRPC server types
//
// Command:
// $ goa gen github.com/goadesign/examples/security/design

package server

import (
	anothersecuredservice "github.com/goadesign/examples/security/gen/another_secured_service"
	another_secured_servicepb "github.com/goadesign/examples/security/gen/grpc/another_secured_service/pb"
)

// NewSigninPayload builds the payload of the "signin" endpoint of the
// "another_secured_service" service from the gRPC request type.
func NewSigninPayload(username string, password string) *anothersecuredservice.SigninPayload {
	v := &anothersecuredservice.SigninPayload{}
	v.Username = username
	v.Password = password
	return v
}

// NewSigninResponse builds the gRPC response type from the result of the
// "signin" endpoint of the "another_secured_service" service.
func NewSigninResponse(result *anothersecuredservice.Creds) *another_secured_servicepb.SigninResponse {
	message := &another_secured_servicepb.SigninResponse{
		Jwt:        result.JWT,
		ApiKey:     result.APIKey,
		OauthToken: result.OauthToken,
	}
	return message
}

// NewSecurePayload builds the payload of the "secure" endpoint of the
// "another_secured_service" service from the gRPC request type.
func NewSecurePayload(message *another_secured_servicepb.SecureRequest, token string) *anothersecuredservice.SecurePayload {
	v := &anothersecuredservice.SecurePayload{
		Fail: &message.Fail,
	}
	v.Token = token
	return v
}

// NewSecureResponse builds the gRPC response type from the result of the
// "secure" endpoint of the "another_secured_service" service.
func NewSecureResponse(result string) *another_secured_servicepb.SecureResponse {
	message := &another_secured_servicepb.SecureResponse{}
	message.Field = result
	return message
}

// NewDoublySecurePayload builds the payload of the "doubly_secure" endpoint of
// the "another_secured_service" service from the gRPC request type.
func NewDoublySecurePayload(message *another_secured_servicepb.DoublySecureRequest, token string) *anothersecuredservice.DoublySecurePayload {
	v := &anothersecuredservice.DoublySecurePayload{
		Key: message.Key,
	}
	v.Token = token
	return v
}

// NewDoublySecureResponse builds the gRPC response type from the result of the
// "doubly_secure" endpoint of the "another_secured_service" service.
func NewDoublySecureResponse(result string) *another_secured_servicepb.DoublySecureResponse {
	message := &another_secured_servicepb.DoublySecureResponse{}
	message.Field = result
	return message
}

// NewAlsoDoublySecurePayload builds the payload of the "also_doubly_secure"
// endpoint of the "another_secured_service" service from the gRPC request type.
func NewAlsoDoublySecurePayload(message *another_secured_servicepb.AlsoDoublySecureRequest, oauthToken *string, token *string) *anothersecuredservice.AlsoDoublySecurePayload {
	v := &anothersecuredservice.AlsoDoublySecurePayload{}
	if message.Username != "" {
		v.Username = &message.Username
	}
	if message.Password != "" {
		v.Password = &message.Password
	}
	if message.Key != "" {
		v.Key = &message.Key
	}
	v.OauthToken = oauthToken
	v.Token = token
	return v
}

// NewAlsoDoublySecureResponse builds the gRPC response type from the result of
// the "also_doubly_secure" endpoint of the "another_secured_service" service.
func NewAlsoDoublySecureResponse(result string) *another_secured_servicepb.AlsoDoublySecureResponse {
	message := &another_secured_servicepb.AlsoDoublySecureResponse{}
	message.Field = result
	return message
}
